#!/bin/bash
port=$(jq '.outbounds[0].settings.vnext[0].port' /etc/vtrui/config.json)

result=$(echo $port | grep '^[0-9]\+$')
if [[ $result = "" ]]; then
port="443"
fi

domain=$(jq -r '.outbounds[0].settings.vnext[0].address' /etc/vtrui/config.json)
uuidnum=$(jq -r '.outbounds[0].settings.vnext[0].users[0].id' /etc/vtrui/config.json)
v2path=$(jq -r '.outbounds[0].streamSettings.wsSettings.path' /etc/vtrui/config.json)

cat > /etc/vtrui/config.json << EOF
{
  "inbounds": [
    {
   "port": 53,
   "tag": "dnsin",
   "protocol": "dokodemo-door",
   "settings": {"address": "0.0.0.0", "port": 5390, "network": "tcp,udp"}
    },
    {
    "port": 9897,
    "protocol": "socks",
    "settings": { "auth": "noauth", "network": "tcp,udp" },
    "sniffing": { "enabled": true, "destOverride": ["http", "tls"] }
    },
    {
    "port": 9896,
    "listen": "127.0.0.1",
    "protocol": "dokodemo-door",
    "settings": { "auth": "noauth", "network": "tcp,udp", "followRedirect": true },
    "sniffing": { "enabled": true, "destOverride": ["http", "tls"] },
    "streamSettings": { "sockopt": { "mark": 255, "tproxy": "tproxy" } }
    }
  ],
  "outbounds": [
    {
      "tag": "proxy",
      "mux": {"enabled": true},
      "protocol": "vmess",
      "settings": {
        "vnext": [
          {
            "address": "xxxx.ooo",
            "port": 443,
            "users": [
              {
                "id": "00000000-0000-0000-0000-000000000000",
                "level": 1,
                "alterId": 32,
                "security": "auto"
              }
            ]
          }
        ]
      },
      "streamSettings": {
        "network": "ws",
        "wsSettings": {
          "path": "/000000",
          "headers": {
            "Host": "xxxx.ooo"
          }
        },
        "security": "tls",
        "tlsSettings": {
          "serverName": "xxxx.ooo",
          "allowInsecure": false
        },
        "sockopt": {
          "mark": 255
        }
      }
    },
    {
      "tag": "netflix",
      "mux": {"enabled": true},
      "protocol": "vmess",
      "settings": {
        "vnext": [
          {
            "address": "xxxx.ooo",
            "port": 443,
            "users": [
              {
                "id": "00000000-0000-0000-0000-000000000000",
                "level": 0,
                "alterId": 32,
                "security": "auto"
              }
            ]
          }
        ]
      },
      "streamSettings": {
        "network": "ws",
        "wsSettings": {
          "path": "/000000",
          "headers": {
            "Host": "xxxx.ooo"
          }
        },
        "security": "tls",
        "tlsSettings": {
          "serverName": "xxxx.ooo",
          "allowInsecure": false
        },
        "sockopt": {
          "mark": 255
        }
      }
    },
    { "tag": "dnsout", "protocol": "dns", "streamSettings": { "sockopt": { "mark": 255 } } },
    { "tag": "direct", "protocol": "freedom", "settings": {}, "streamSettings": { "sockopt": { "mark": 255 } } }
  ],
  "dns": {"servers": [
    {"address": "127.0.0.1","port": 5390},
    {"address": "127.0.0.1","port": 5390, "domains": ["domain:baidu.com"] },
    {"address": "127.0.0.1","port": 5380, "domains": ["domain:google.com"] },
    {"address": "127.0.0.1","port": 5380, "domains": ["ext:h2y.dat:gfw"] }
                     ]},
  "routing": {
    "domainStrategy": "IPIfNonMatch",
    "rules": [
      { "type": "field", "inboundTag": ["dnsin"], "outboundTag": "dnsout" },
      { "type": "field", "ip": [ "geoip:private", "geoip:cn", "114.114.114.114", "114.114.115.115", "119.29.29.29", "119.28.28.28", "223.5.5.5", "223.6.6.6" ], "outboundTag": "direct" },
      {
        "type": "field",
        "domain": [
          "domain:netflix.com",
          "domain:nflxvideo.net",
          "domain:nflxso.net",
          "domain:nflximg.net",
          "domain:netflix.net",
          "domain:netflixdnstest0.com",
          "domain:netflixdnstest1.com",
          "domain:netflixdnstest2.com",
          "domain:netflixdnstest3.com",
          "domain:netflixdnstest4.com",
          "domain:netflixdnstest5.com",
          "domain:netflixdnstest6.com",
          "domain:netflixdnstest7.com",
          "domain:netflixdnstest8.com",
          "domain:netflixdnstest9.com"
        ],
        "outboundTag": "netflix"
      }
    ]
  }
}
EOF

jq --arg domain "$domain" '.outbounds[0].settings.vnext[0].address=$domain' /etc/vtrui/config.json |\
jq --argjson port "$port" '.outbounds[0].settings.vnext[0].port=$port' |\
jq --arg uuidnum "$uuidnum" '.outbounds[0].settings.vnext[0].users[0].id=$uuidnum' |\
jq --arg v2path "$v2path" '.outbounds[0].streamSettings.wsSettings.path=$v2path' |\
jq --arg domain "$domain" '.outbounds[0].streamSettings.wsSettings.headers.Host=$domain' |\
jq --arg domain "$domain" '.outbounds[0].streamSettings.tlsSettings.serverName=$domain' |\
jq --arg domain "$domain" '.outbounds[1].settings.vnext[0].address=$domain' |\
jq --argjson port "$port" '.outbounds[1].settings.vnext[0].port=$port' |\
jq --arg uuidnum "$uuidnum" '.outbounds[1].settings.vnext[0].users[0].id=$uuidnum' |\
jq --arg v2path "$v2path" '.outbounds[1].streamSettings.wsSettings.path=$v2path' |\
jq --arg domain "$domain" '.outbounds[1].streamSettings.wsSettings.headers.Host=$domain' |\
jq --arg domain "$domain" '.outbounds[1].streamSettings.tlsSettings.serverName=$domain' |\
jq --arg domain "$domain" '.outbounds[2].settings.vnext[0].address=$domain' |\
jq --argjson port "$port" '.outbounds[2].settings.vnext[0].port=$port' |\
jq --arg uuidnum "$uuidnum" '.outbounds[2].settings.vnext[0].users[0].id=$uuidnum' |\
jq --arg v2path "$v2path" '.outbounds[2].streamSettings.wsSettings.path=$v2path' |\
jq --arg domain "$domain" '.outbounds[2].streamSettings.wsSettings.headers.Host=$domain' |\
jq --arg domain "$domain" '.outbounds[2].streamSettings.tlsSettings.serverName=$domain' > /etc/vtrui/temp.json && mv -f /etc/vtrui/temp.json /etc/vtrui/config.json

systemctl restart vtrui

sed -i '/div id="shnodedt" style=/c\<div id="shnodedt" style="display:none">' /var/www/html/index.php